// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsFeed.DataAccess;

namespace NewsFeed.DataAccess.Migrations
{
    [DbContext(typeof(NewsFeedDbContext))]
    partial class NewsFeedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("NewsFeed.Model.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int?>("NewsFeedItemId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NewsFeedItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("NewsFeed.Model.Entities.NewsFeedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("PublishDate");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("NewsFeedItems");
                });

            modelBuilder.Entity("NewsFeed.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Nick");

                    b.Property<string>("SurName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NewsFeed.Model.Entities.Comment", b =>
                {
                    b.HasOne("NewsFeed.Model.Entities.NewsFeedItem")
                        .WithMany("Comments")
                        .HasForeignKey("NewsFeedItemId");

                    b.HasOne("NewsFeed.Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NewsFeed.Model.Entities.NewsFeedItem", b =>
                {
                    b.HasOne("NewsFeed.Model.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");
                });
#pragma warning restore 612, 618
        }
    }
}
